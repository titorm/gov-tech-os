name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      mongodb:
        image: mongo:7-alpine
        ports:
          - 27017:27017
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: 🏗️ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Lint code
        run: pnpm lint

      - name: 🔧 Type check
        run: pnpm type-check

      - name: 🧪 Run tests
        run: pnpm test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          MONGODB_URI: mongodb://localhost:27017/test-logs
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key

      - name: 📊 Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        app: [api, web, mobile]
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 🏗️ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔨 Build ${{ matrix.app }}
        run: pnpm build --filter=${{ matrix.app }}

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-build
          path: |
            apps/${{ matrix.app }}/dist
            apps/${{ matrix.app }}/build
            apps/${{ matrix.app }}/.next
          retention-days: 7

  deploy-preview:
    name: Deploy Preview (Vercel)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: apps/web

  deploy-production:
    name: Deploy Production (Vercel)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: apps/web
